[{"/Users/AlmightySo/Documents/lambda/User-Onboarding/my-app/src/index.js":"1","/Users/AlmightySo/Documents/lambda/User-Onboarding/my-app/src/reportWebVitals.js":"2","/Users/AlmightySo/Documents/lambda/User-Onboarding/my-app/src/App.js":"3","/Users/AlmightySo/Documents/lambda/User-Onboarding/my-app/src/Form.js":"4"},{"size":500,"mtime":1611111916038,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1611111916041,"results":"7","hashOfConfig":"6"},{"size":1401,"mtime":1611204992480,"results":"8","hashOfConfig":"6"},{"size":2027,"mtime":1611288086618,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"155iwut",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/AlmightySo/Documents/lambda/User-Onboarding/my-app/src/index.js",[],["20","21"],"/Users/AlmightySo/Documents/lambda/User-Onboarding/my-app/src/reportWebVitals.js",[],"/Users/AlmightySo/Documents/lambda/User-Onboarding/my-app/src/App.js",["22","23","24"],"\nimport './App.css';\nimport React, {useState} from 'react'\nimport axios from 'axios'\nimport * as yup from 'yup'\nimport Form from './Form'\n\nconst schema = yup.object().shape({\n  username: yup\n  .string()\n  .email('valid username')\n  .required('must include username'),\n  email: yup\n  .string()\n  .email('valid email address')\n  .required('must include email'),\n  password: yup\n  .string()\n  .email('valid password')\n  .required('must include password')\n  .min(6, 'password must be at least 6 characters long')\n\n})\n\nconst initialFormValues ={\n  username: '',\n  email: '',\n  password: '',\n\n}\n\nfunction App() {\n\n  const [formValues, setFormValues]= useState(initialFormValues)\n\n  const updateForm =(inputName, inputValue) =>{\n    setFormValues({...formValues, [inputName]: inputValue})\n\n    \n  }\n\n  const submitForm = () =>{\nconst newUser = {\n      username: formValues.username.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password,\n}\n\n\n    axios\n        .post(`https://reqres.in/api/users`, newUser)\n        .then((res) => {\n          console.log(res.data)\n          const getUser = res.data;\n        // set res.data as a user state and render it as HTML pre-tag\n\n\n\n        })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>User Onboarding</h1>\n      <Form update={setFormValues} values={formValues} submit={submitForm}/>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/AlmightySo/Documents/lambda/User-Onboarding/my-app/src/Form.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":8,"column":7,"nodeType":"31","messageId":"32","endLine":8,"endColumn":13},{"ruleId":"29","severity":1,"message":"33","line":36,"column":9,"nodeType":"31","messageId":"32","endLine":36,"endColumn":19},{"ruleId":"29","severity":1,"message":"34","line":54,"column":17,"nodeType":"31","messageId":"32","endLine":54,"endColumn":24},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'schema' is assigned a value but never used.","Identifier","unusedVar","'updateForm' is assigned a value but never used.","'getUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"/Users/mitch/Desktop/LambdaSchool/UnitTwo/SprintThree/User-Onboarding/user-onboarding/src/index.js":"1","/Users/mitch/Desktop/LambdaSchool/UnitTwo/SprintThree/User-Onboarding/user-onboarding/src/reportWebVitals.js":"2","/Users/mitch/Desktop/LambdaSchool/UnitTwo/SprintThree/User-Onboarding/user-onboarding/src/App.js":"3","/Users/mitch/Desktop/LambdaSchool/UnitTwo/SprintThree/User-Onboarding/user-onboarding/src/Form.js":"4"},{"size":500,"mtime":1607476641760,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1607476641760,"results":"7","hashOfConfig":"6"},{"size":155,"mtime":1607478404921,"results":"8","hashOfConfig":"6"},{"size":3990,"mtime":1607493224213,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"6xxm4g",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/mitch/Desktop/LambdaSchool/UnitTwo/SprintThree/User-Onboarding/user-onboarding/src/index.js",[],["20","21"],"/Users/mitch/Desktop/LambdaSchool/UnitTwo/SprintThree/User-Onboarding/user-onboarding/src/reportWebVitals.js",[],"/Users/mitch/Desktop/LambdaSchool/UnitTwo/SprintThree/User-Onboarding/user-onboarding/src/App.js",[],"/Users/mitch/Desktop/LambdaSchool/UnitTwo/SprintThree/User-Onboarding/user-onboarding/src/Form.js",["22"],"import React, {useState, useEffect} from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\n\nfunction Form() {\n    const [form, setForm] = useState({\n        name: '',\n        email: '',\n        password: '',\n        terms: false\n    });\n    const [disabled, setDisabled] = useState(true);\n    const [users, setUsers] = useState();\n    const [serverError, setServerError] = useState([]);\n    const [inlineError, setInlineError] = useState({\n        name: '',\n        email: '',\n        password: '',\n        terms: ''\n    });\n    const handleChange = (e) => {\n        e.persist();\n        validate(e);\n        setForm({...form, [e.target.name]:\n            e.target.type === 'checkbox' ? \n            e.target.checked : e.target.value});\n        };\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        axios.post('https://reqres.in/api/users', form)\n        .then((res) => {\n            setUsers(res.data);\n            setServerError(null);\n            setForm({\n                name: '',\n                email: '',\n                password: '',\n                terms: false\n            });\n        })\n        .catch((err) => {\n            setServerError('whoops, something went wrong');\n        });\n    };\n    const formSchema = yup.object().shape({\n        name: yup.string().required('must provide a name'),\n        email: yup.string().email(),\n        password: yup.string().required('must have a password'),\n        terms: yup.boolean().oneOf([true])\n    });\n    useEffect(() => {\n        formSchema.isValid(form).then((valid) => {\n            setDisabled(!valid);\n        });\n    }, [form]);\n    const validate = e => {\n        yup\n            .reach(formSchema, e.target.name)\n            .validate(\n                e.target.type === 'checkbox' ? e.target.checked : e.target.value\n            )\n            .then((valid) => {\n                setInlineError({...inlineError, [e.target.name]: ''});\n            })\n            .catch((err) => {\n                console.log(err.errors[0])\n                setInlineError({...inlineError, [e.target.name]: err.errors[0]})\n            })\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            {serverError && <p>{serverError}</p>}\n\n            <label htmlFor='name'>\n            Name:\n                <input \n                    id='name'\n                    name='name'\n                    placeholder='name'\n                    value={form.name}\n                    onChange={handleChange}\n                />\n                {inlineError.name && <p className='error'>{inlineError.name}</p>}\n            </label>\n            <label htmlFor='email'>\n            email:\n                <input \n                id='email'\n                name='email'\n                placeholder='email'\n                value={form.email}\n                onChange={handleChange}\n                />\n                {inlineError.email.length > 0 ? <p className='error'>{inlineError.email}</p> : null}\n            </label>\n            <label htmlFor='password'>\n            password:\n                <input \n                id='password'\n                name='password'\n                placeholder='password'\n                value={form.password}\n                onChange={handleChange}\n                />\n                {inlineError.password.length > 0 ? <p className='error'>{inlineError.password}</p> : null}\n            </label>\n            <label htmlFor='terms'>\n            I agree to the terms and conditions\n                <input \n                type='checkbox'\n                id='terms'\n                name='terms'\n                checked={form.terms}\n                onChange={handleChange}\n                />\n                {inlineError.terms.length > 0 ? <p className='error'>{inlineError.terms}</p> : null}\n            </label>\n            <button type='submit' disabled={disabled}>Submit</button>\n            <pre>{JSON.stringify(users, null, 2)}</pre>\n        </form>\n    )\n}\nexport default Form;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":56,"column":8,"nodeType":"29","endLine":56,"endColumn":14,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [form, formSchema]",{"range":"36","text":"37"},[1618,1624],"[form, formSchema]"]
{"ast":null,"code":"var _jsxFileName = \"/Users/samhall/Library/Mobile Documents/com~apple~CloudDocs/All Things Lambda/Lambda Projects/adv-forms/src/components/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nexport default function Form() {\n  const initialFormState = {\n    username: '',\n    email: '',\n    password: '',\n    terms: ''\n  };\n  const [post, setPost] = useState([]);\n  const [user, setNewUsers] = useState([]);\n  const [serverError, setServerError] = useState(\"\");\n  const [formState, setFormState] = useState(initialFormState);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [errors, setErrors] = useState(initialFormState);\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"You must choose a username!\"),\n    email: yup.string().email('Invalid email address').required(),\n    password: yup.string().required(\"Invalid password\"),\n    terms: yup.boolean().oneOf([true], 'Agree or die')\n  });\n\n  const validateChange = e => {\n    yup.reach(formSchema, e.target.name).validate(e.target.value).then(valid => {\n      setErrors({ ...errors,\n        [e.target.name]: ''\n      });\n    }).catch(err => {\n      console.log('error', err);\n      setErrors({ ...errors,\n        [e.target.name]: err.errors[0]\n      });\n    });\n  };\n\n  useEffect(() => {\n    formSchema.isValid(formState).then(valid => {\n      console.log('valid?', valid);\n      setIsButtonDisabled(!valid);\n    });\n  }, [formState]);\n\n  const formSubmit = e => {\n    e.preventDefault();\n    axios.post('https://reqres.in/api/users', formState).then(response => {\n      setPost(response.data);\n      u;\n      setNewUsers(user => [...user, post]);\n      setFormState({\n        username: '',\n        email: '',\n        password: '',\n        terms: ''\n      });\n      setServerError(null);\n    }).catch(err => {\n      setServerError('Something isn\\'t working!');\n    });\n  };\n\n  console.log('USERS', user);\n  console.log(user);\n\n  const inputChange = e => {\n    e.persist();\n    const newFormData = { ...formState,\n      [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    };\n    validateChange(e);\n    setFormState(newFormData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, serverError ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 28\n    }\n  }, serverError) : null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    onChange: inputChange,\n    value: formState.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), errors.username.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 47\n    }\n  }, errors.name) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    onChange: inputChange,\n    value: formState.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), errors.email.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 44\n    }\n  }, errors.email) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: inputChange,\n    value: formState.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), errors.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 47\n    }\n  }, errors.email) : null), /*#__PURE__*/React.createElement(\"label\", {\n    id: \"terms\",\n    htmlFor: \"terms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"terms\",\n    checked: formState.terms,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), \"Terms of Service\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    type: \"submit\",\n    disabled: isButtonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, JSON.stringify(post, null, 2)));\n}\n;","map":{"version":3,"sources":["/Users/samhall/Library/Mobile Documents/com~apple~CloudDocs/All Things Lambda/Lambda Projects/adv-forms/src/components/Form.js"],"names":["React","useState","useEffect","yup","axios","Form","initialFormState","username","email","password","terms","post","setPost","user","setNewUsers","serverError","setServerError","formState","setFormState","isButtonDisabled","setIsButtonDisabled","errors","setErrors","formSchema","object","shape","string","required","boolean","oneOf","validateChange","e","reach","target","name","validate","value","then","valid","catch","err","console","log","isValid","formSubmit","preventDefault","response","data","u","inputChange","persist","newFormData","type","checked","length","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from  'axios';\n\n\nexport default function Form() {\n\n    const initialFormState = {\n        username: '',\n        email: '',\n        password:  '',\n        terms: ''\n    };\n\n    const [post, setPost] = useState([]);\n    const [user, setNewUsers] = useState([]);\n    const [serverError, setServerError] = useState(\"\");\n    const [formState, setFormState] = useState(initialFormState);\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n    const [errors, setErrors] = useState(initialFormState);\n\n    const formSchema = yup.object().shape({\n        username: yup.string().required(\"You must choose a username!\"),\n        email: yup.string().email('Invalid email address').required(),\n        password: yup.string().required(\"Invalid password\"),\n        terms: yup.boolean().oneOf([true], 'Agree or die')\n    });\n\n    const validateChange = e => {\n        yup\n            .reach(formSchema, e.target.name)\n            .validate(e.target.value)\n            .then(valid => {\n                setErrors({ ...errors, [e.target.name]: '' });\n            })\n            .catch(err => {\n                console.log('error', err);\n                setErrors({ ...errors, [e.target.name]: err.errors[0] });\n        });\n    };\n\n    useEffect(() => {\n        formSchema.isValid(formState).then(valid => {\n            console.log('valid?', valid);\n            setIsButtonDisabled(!valid);\n        });\n    }, [formState]);\n\n    const formSubmit = e => {\n        e.preventDefault();\n\n        axios\n            .post('https://reqres.in/api/users', formState)\n            .then(response => {\n                setPost(response.data);\n                u\n                setNewUsers(user => [...user, post])\n                \n\n                setFormState({\n                    username: '',\n                    email: '',\n                    password: '',\n                    terms: ''\n                });\n\n                setServerError(null);\n            })\n\n            .catch(err => {\n                setServerError('Something isn\\'t working!');\n            });\n    };\n\n    console.log('USERS', user);\n\n    console.log(user);\n\n    const inputChange = e => {\n        e.persist();\n        const newFormData = {\n            ...formState,\n            [e.target.name]:\n                e.target.type === 'checkbox'  ? e.target.checked : e.target.value\n        };\n        \n        validateChange(e);\n        setFormState(newFormData)\n    }\n\n    return(\n        <form onSubmit={formSubmit}>\n            {serverError ? <p className='error'>{serverError}</p> : null}\n            <label htmlFor='username'>\n                Username: \n                <input\n                id='username'\n                type='text'\n                name='username'\n                placeholder='Username'\n                onChange={inputChange}\n                value={formState.username} />\n                {errors.username.length > 0 ? <p className='error'>{errors.name}</p> : null}\n            </label>\n            <label htmlFor='email'>\n                Email: \n                <input\n                id='email'\n                type='text'\n                name='email'\n                placeholder='Email'\n                onChange={inputChange}\n                value={formState.email} />\n                {errors.email.length > 0 ? <p className='error'>{errors.email}</p> : null}\n            </label>\n            <label htmlFor='password'>\n                Password: \n                <input\n                type='text'\n                name='password'\n                placeholder='Password'\n                onChange={inputChange}\n                value={formState.password} />\n                {errors.password.length > 0 ? <p className='error'>{errors.email}</p> : null}\n            </label>\n            <label id='terms' htmlFor='terms'>\n                <input\n                type='checkbox' \n                name='terms'\n                checked={formState.terms}\n                onChange={inputChange} />\n                Terms of Service\n            </label>\n            <button id='submit' type='submit' disabled={isButtonDisabled}>Submit</button>\n            <pre>{JSON.stringify(post, null, 2)}</pre>\n        </form>\n    );\n};"]},"metadata":{},"sourceType":"module"}
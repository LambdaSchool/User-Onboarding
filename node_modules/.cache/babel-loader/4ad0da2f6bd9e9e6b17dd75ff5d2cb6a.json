{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Galvin/coding/unit-2/sprint-3/user-onboarding/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Form from './Components/Form';\nimport User from './Components/Users';\nimport schema from './Validations/formSchema';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nconst initialFormValues = {\n  ///// TEXT INPUTS /////\n  name: '',\n  email: '',\n  password: '',\n  ///// CHECKBOXES /////\n  termsOfService: false\n};\nconst initialFormErrors = {\n  name: '',\n  email: '',\n  password: '' // civil: '',\n\n};\nconst initialUsers = [];\nconst initialDisabled = true;\nexport default function App() {\n  _s();\n\n  const [users, setUsers] = useState(initialUsers); // array of user objects\n\n  const [formValues, setFormValues] = useState(initialFormValues); // object\n\n  const [formErrors, setFormErrors] = useState(initialFormErrors); // object\n\n  const [disabled, setDisabled] = useState(initialDisabled); // const getUsers = () => {\n  //   axios\n  //   .get(`https://reqres.in/api/users`)\n  //   .then((res) => {\n  //     setUsers(res.data);\n  //   })\n  //   .catch((err) => {\n  //     debugger;\n  //   })\n  // }\n\n  const postNewUser = newUser => {\n    axios.post(`https://reqres.in/api/users`, newUser).then(res => {\n      setUsers([res.data, ...users]);\n      setFormValues(initialFormValues);\n    }).catch(err => {\n      debugger;\n    });\n  };\n\n  const inputChange = (name, value) => {\n    Yup.reach(schema, name) //get to this part of the schema\n    .validate(value) //validate this value\n    .then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value // NOT AN ARRAY\n\n    });\n  };\n\n  const formSubmit = evt => {\n    evt.preventdefault();\n    const newUser = {\n      name: formValues.name.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      termsOfService: formValues.termsOfService\n    };\n    postNewUser(newUser);\n  }; // useEffect(() => {\n  //   getUsers()\n  // }, [])\n\n\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" User Onboarding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      values: formValues,\n      change: inputChange,\n      disabled: disabled,\n      submit: formSubmit,\n      errors: formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), users.map(user => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        details: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"khyPcqmWQfzbhQD1sukvKIuPar0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Galvin/coding/unit-2/sprint-3/user-onboarding/src/App.js"],"names":["React","useState","useEffect","Form","User","schema","axios","Yup","initialFormValues","name","email","password","termsOfService","initialFormErrors","initialUsers","initialDisabled","App","users","setUsers","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","postNewUser","newUser","post","then","res","data","catch","err","inputChange","value","reach","validate","errors","formSubmit","evt","preventdefault","trim","isValid","valid","map","user","id"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Form from './Components/Form';\nimport User from './Components/Users';\nimport schema from './Validations/formSchema';\nimport axios from 'axios';\nimport * as Yup from 'yup';\n\nconst initialFormValues = {\n  ///// TEXT INPUTS /////\n  name: '',\n  email: '',\n  password: '',\n  ///// CHECKBOXES /////\n  termsOfService: false,\n}\nconst initialFormErrors = {\n  name: '',\n  email: '',\n  password: '',\n  // civil: '',\n}\nconst initialUsers = []\nconst initialDisabled = true\n\n\nexport default function App() {\n\n  const [users, setUsers] = useState(initialUsers)          // array of user objects\n  const [formValues, setFormValues] = useState(initialFormValues) // object\n  const [formErrors, setFormErrors] = useState(initialFormErrors) // object\n  const [disabled, setDisabled] = useState(initialDisabled)   \n\n\n\n  // const getUsers = () => {\n  //   axios\n  //   .get(`https://reqres.in/api/users`)\n  //   .then((res) => {\n  //     setUsers(res.data);\n  //   })\n  //   .catch((err) => {\n  //     debugger;\n  //   })\n  // }\n\n  const postNewUser = newUser => {\n    axios\n    .post(`https://reqres.in/api/users`, newUser)\n    .then((res) => {\n      setUsers([res.data, ...users]);\n      setFormValues(initialFormValues);\n    })\n    .catch((err) => {\n      debugger;\n    })\n  };\n\n\n  const inputChange = (name, value) => {\n\n    Yup\n    .reach(schema, name) //get to this part of the schema\n    .validate(value) //validate this value\n    .then(() => {\n      setFormErrors({\n        ...formErrors,\n        [name]: '',\n      })\n    })\n    .catch((err) => {\n      setFormErrors({\n        ...formErrors,\n        [name]: err.errors[0],\n      })\n    })\n\n    setFormValues({\n      ...formValues,\n      [name]: value // NOT AN ARRAY\n    })\n  };\n\n  const formSubmit = (evt) => {\n    evt.preventdefault();\n    const newUser = {\n      name: formValues.name.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      termsOfService: formValues.termsOfService\n    }\n    postNewUser(newUser);\n  }\n\n  // useEffect(() => {\n  //   getUsers()\n  // }, [])\n\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n\n\n  return (\n    <div className=\"App\">\n      <h1> User Onboarding</h1>\n      <Form\n        values={formValues}\n        change={inputChange}\n        disabled={disabled}\n        submit={formSubmit}\n        errors={formErrors}\n      />\n\n{\n        users.map(user => {\n          return (\n            <User key={user.id} details={user} />\n          )\n        })\n      }\n    </div>\n  );\n}\n        \n"]},"metadata":{},"sourceType":"module"}
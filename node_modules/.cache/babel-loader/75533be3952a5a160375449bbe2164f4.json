{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import * as yup from 'yup';\n// import axios from  'axios';\n// export default function Form() {\n//     const initialFormState = {\n//         username: '',\n//         email: '',\n//         password:  '',\n//         terms: ''\n//     };\n//     const [post, setPost] = useState([]);\n//     const [serverError, setServerError] = useState(\"\");\n//     const [formState, setFormState] = useState(initialFormState);\n//     const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n//     const [errors, setErrors] = useState(initialFormState);\n//     const formSchema = yup.object().shape({\n//         username: yup.string().required(\"You must choose a username!\"),\n//         email: yup.string().email('Invalid email address').required(),\n//         password: yup.string().required(\"Invalid password\"),\n//         terms: yup.boolean().oneOf([true], 'Agree or die')\n//     });\n//     const validateChange = e => {\n//         yup\n//             .reach(formSchema, e.target.name)\n//             .validate(e.target.value)\n//             .then(valid => {\n//                 setErrors({ ...errors, [e.target.name]: '' });\n//             })\n//             .catch(err => {\n//                 console.log('error', err);\n//                 setErrors({ ...errors, [e.target.name]: err.errors[0] });\n//         });\n//     };\n//     useEffect(() => {\n//         formSchema.isValid(formState).then(valid => {\n//             console.log('valid?', valid);\n//             setIsButtonDisabled(!valid);\n//         });\n//     }, [formState]);\n//     const formSubmit = e => {\n//         e.preventDefault();\n//         axios\n//             .post('h', formState)\n//             .then(response => {\n//                 setPost(response.data);\n//                 setFormState({\n//                     username: '',\n//                     email: '',\n//                     password: '',\n//                     terms: ''\n//                 });\n//                 setServerError(null);\n//             })\n//             .catch(err => {\n//                 setServerError('Something isn\\'t working!');\n//             });\n//     };\n//     const inputChange = e => {\n//         e.persist();\n//         const newFormData = {\n//             ...formState,\n//             [e.target.name]:\n//                 e.target.type === 'checkbox'  ? e.target.checked : e.target.value\n//         };\n//         validateChange(e);\n//         setFormState(newFormData)\n//     }\n//     return(\n//         <form onSubmit={formSubmit}>\n//             {serverError ? <p className='error'>{serverError}</p> : null}\n//             <label htmlFor='username'>\n//                 Username: \n//                 <input\n//                 id='username'\n//                 type='text'\n//                 name='username'\n//                 placeholder='Username'\n//                 onChange={inputChange}\n//                 value={formState.username} />\n//                 {errors.username.length > 0 ? <p className='error'>{errors.name}</p> : null}\n//             </label>\n//             <label htmlFor='email'>\n//                 Email: \n//                 <input\n//                 id='email'\n//                 type='text'\n//                 name='email'\n//                 placeholder='Email'\n//                 onChange={inputChange}\n//                 value={formState.email} />\n//                 {errors.email.length > 0 ? <p className='error'>{errors.email}</p> : null}\n//             </label>\n//             <label htmlFor='password'>\n//                 Password: \n//                 <input\n//                 type='text'\n//                 name='password'\n//                 placeholder='Password'\n//                 onChange={inputChange}\n//                 value={formState.password} />\n//                 {errors.password.length > 0 ? <p className='error'>{errors.email}</p> : null}\n//             </label>\n//             <label id='terms' htmlFor='terms'>\n//                 <input\n//                 type='checkbox' \n//                 name='terms'\n//                 checked={formState.terms}\n//                 onChange={inputChange} />\n//                 Terms of Service\n//             </label>\n//             <pre>{JSON.stringify(post, null, 2)}</pre>\n//             <button id='submit' type='submit' disabled={isButtonDisabled}>Submit</button>\n//         </form>\n//     );\n// };","map":{"version":3,"sources":["/Users/samhall/Library/Mobile Documents/com~apple~CloudDocs/All Things Lambda/Lambda Projects/adv-forms/src/components/Form.js"],"names":[],"mappingssourcesContent":["\n\n// import React, { useState, useEffect } from 'react';\n// import * as yup from 'yup';\n// import axios from  'axios';\n\n\n// export default function Form() {\n\n//     const initialFormState = {\n//         username: '',\n//         email: '',\n//         password:  '',\n//         terms: ''\n//     };\n\n//     const [post, setPost] = useState([]);\n//     const [serverError, setServerError] = useState(\"\");\n//     const [formState, setFormState] = useState(initialFormState);\n//     const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n//     const [errors, setErrors] = useState(initialFormState);\n\n//     const formSchema = yup.object().shape({\n//         username: yup.string().required(\"You must choose a username!\"),\n//         email: yup.string().email('Invalid email address').required(),\n//         password: yup.string().required(\"Invalid password\"),\n//         terms: yup.boolean().oneOf([true], 'Agree or die')\n//     });\n\n//     const validateChange = e => {\n//         yup\n//             .reach(formSchema, e.target.name)\n//             .validate(e.target.value)\n//             .then(valid => {\n//                 setErrors({ ...errors, [e.target.name]: '' });\n//             })\n//             .catch(err => {\n//                 console.log('error', err);\n//                 setErrors({ ...errors, [e.target.name]: err.errors[0] });\n//         });\n//     };\n\n//     useEffect(() => {\n//         formSchema.isValid(formState).then(valid => {\n//             console.log('valid?', valid);\n//             setIsButtonDisabled(!valid);\n//         });\n//     }, [formState]);\n\n//     const formSubmit = e => {\n//         e.preventDefault();\n\n//         axios\n//             .post('h', formState)\n//             .then(response => {\n//                 setPost(response.data);\n\n//                 setFormState({\n//                     username: '',\n//                     email: '',\n//                     password: '',\n//                     terms: ''\n//                 });\n\n//                 setServerError(null);\n//             })\n\n//             .catch(err => {\n//                 setServerError('Something isn\\'t working!');\n//             });\n//     };\n\n//     const inputChange = e => {\n//         e.persist();\n//         const newFormData = {\n//             ...formState,\n//             [e.target.name]:\n//                 e.target.type === 'checkbox'  ? e.target.checked : e.target.value\n//         };\n        \n//         validateChange(e);\n//         setFormState(newFormData)\n//     }\n\n//     return(\n//         <form onSubmit={formSubmit}>\n//             {serverError ? <p className='error'>{serverError}</p> : null}\n//             <label htmlFor='username'>\n//                 Username: \n//                 <input\n//                 id='username'\n//                 type='text'\n//                 name='username'\n//                 placeholder='Username'\n//                 onChange={inputChange}\n//                 value={formState.username} />\n//                 {errors.username.length > 0 ? <p className='error'>{errors.name}</p> : null}\n//             </label>\n//             <label htmlFor='email'>\n//                 Email: \n//                 <input\n//                 id='email'\n//                 type='text'\n//                 name='email'\n//                 placeholder='Email'\n//                 onChange={inputChange}\n//                 value={formState.email} />\n//                 {errors.email.length > 0 ? <p className='error'>{errors.email}</p> : null}\n//             </label>\n//             <label htmlFor='password'>\n//                 Password: \n//                 <input\n//                 type='text'\n//                 name='password'\n//                 placeholder='Password'\n//                 onChange={inputChange}\n//                 value={formState.password} />\n//                 {errors.password.length > 0 ? <p className='error'>{errors.email}</p> : null}\n//             </label>\n//             <label id='terms' htmlFor='terms'>\n//                 <input\n//                 type='checkbox' \n//                 name='terms'\n//                 checked={formState.terms}\n//                 onChange={inputChange} />\n//                 Terms of Service\n//             </label>\n//             <pre>{JSON.stringify(post, null, 2)}</pre>\n//             <button id='submit' type='submit' disabled={isButtonDisabled}>Submit</button>\n//         </form>\n//     );\n// };"]},"metadata":{},"sourceType":"module"}
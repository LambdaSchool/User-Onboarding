{"version":3,"sources":["formSchema.js","Friends.js","initialFormValues.js","initialFormErrors.js","Form.js","SONVR.svg","App.js","reportWebVitals.js","index.js"],"names":["schema","yup","shape","fname","required","lname","email","nullable","department","termsConditions","Friends","id","initialFormValues","initialFormErrors","Form","useState","disabled","setDisabled","isEditMode","setIsEditMode","editingId","setEditingId","friends","setFriends","formValues","setFormValues","errors","setErrors","validateChange","e","persist","target","name","validate","checked","value","then","valid","console","log","catch","error","change","prevFormValues","useEffect","isValid","newDate","Date","date","getDate","month","getMonth","year","getFullYear","className","style","color","marginTop","onSubmit","preventDefault","friend","find","f","toBeUpdated","filteredFriends","filter","newHire","axios","post","res","data","table","err","postnewHire","uuidv4","htmlFor","onChange","maxLength","placeholder","type","paddingTop","paddingBottom","margin","href","marginBottom","map","idx","border","onClick","eId","employee","handleUpdate","App","src","Logo","alt","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2958a555.chunk.js","sourcesContent":["import * as yup from \"yup\";\n\nlet schema = yup.object().shape({\n  fname: yup.string().required(\"Please provide a first name\"),\n  lname: yup.string().required(\"Please provide a last name\"),\n  email: yup.string().email(\"This is not a valid email address\").nullable(),\n  department: yup.string().required(\"Please provide a valid home department\"),\n  termsConditions: yup\n    .boolean()\n    .required(\"Please ensure materials have been collected first\"),\n});\n\nexport default schema;\n","const Friends = [\n    {\n      id: 1,\n      fname: \"Joseph\",\n      lname: \"Oshiro\",\n      email: \"joseph.oshiro@sonvrdesign.com\",\n      department: \"Technology/ IT\",\n      termsConditions: true,\n    },\n    {\n      id: 2,\n      fname: \"Gerald\",\n      lname: \"Evans\",\n      email: \"gerald.evans@sonvrdesign.com\",\n      department: \"Frontend Development\",\n      termsConditions: true,\n    },\n    {\n      id: 3,\n      fname: \"John\",\n      lname: \"Watson\",\n      email: \"john.watson@sonvrdesign.com\",\n      department: \"Backend Development\",\n      termsConditions: true,\n    },\n    {\n      id: 4,\n      fname: \"May\",\n      lname: \"Jackson\",\n      email: \"may.jackson@sonvrdesign.com\",\n      department: \"Management\",\n      termsConditions: true,\n    },\n  ];\n\n  export default Friends","const initialFormValues = {\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    department: \"\",\n    termsConditions: false,\n  };\n  \n\n\n\n\n\nexport default initialFormValues","const initialFormErrors = {\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    department: \"\",\n    termsConditions: \"\",\n  };\n\n\n\nexport default initialFormErrors","import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport schema from \"./formSchema.js\";\nimport Friends from \"./Friends\";\nimport initialFormValues from \"./initialFormValues\";\nimport initialFormErrors from \"./initialFormErrors\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nexport default function Form() {\n  const [disabled, setDisabled] = useState(true);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [friends, setFriends] = useState(Friends);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [errors, setErrors] = useState({\n    initialFormErrors,\n  });\n\n  const postnewHire = (newHire) => {\n    axios\n      .post(\"http://reqres.in/api/users\", newHire)\n      .then((res) => {\n        setFriends([res.data, ...friends]);\n        console.table(\"API SUCCESS POST\", res.data);\n        setFormValues(initialFormValues);\n      })\n      .catch((err) => {\n        console.log(\"AXIOS FAIL ERROR: \", err);\n      });\n  };\n\n  const deleteQuote = (friend, idx) => {\n    console.log(\"this employee is no longer scheduled for orientation\")\n  }\n\n  //Form Validation Feature\n  //validate whether form matches schema\n  const validateChange = (e) => {\n    //allows react to keep the event object to play nicely with the async\n    e.persist();\n    //reach allows to check a specific value of schema\n    yup\n      .reach(schema, e.target.name)\n\n      .validate(\n        e.target.name === \"termsConditions\" ? e.target.checked : e.target.value\n      )\n      .then((valid) => {\n        //logs validation truthiness\n        console.log(valid);\n        setErrors({\n          ...errors,\n          [e.target.name]: \"\",\n        });\n      })\n      .catch((error) => {\n        setErrors({ ...errors, [e.target.name]: error.errors[0] });\n        console.log(error);\n      });\n  };\n\n  //change handler\n  const change = (e) => {\n    const { name, value } = e.target;\n    validateChange(e);\n    setFormValues((prevFormValues) => ({ ...prevFormValues, [name]: value }));\n  };\n\n  //submit disable feature\n  useEffect(() => {\n    schema.isValid(formValues).then((valid) => setDisabled(!valid));\n  }, [formValues]);\n\n  //form error validation tester\n  // useEffect (() => {\n  //   console.log(\"form errors have changed\", errors)\n  // })\n\n  // to update new hires\n  const handleUpdate = (eId) => {\n    const employee = friends.find((f) => f.id === eId);\n\n    if (employee) {\n      setIsEditMode(true);\n      setFormValues(employee);\n      setEditingId(eId);\n    }\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { checked, name } = e.target;\n    setFormValues((prevFormValues) => ({ ...prevFormValues, [name]: checked }));\n    validateChange(e);\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    if (isEditMode) {\n      const friend = friends.find((f) => f.id === editingId);\n\n      if (friend) {\n        const toBeUpdated = { ...friend };\n        toBeUpdated.fname = formValues.fname || toBeUpdated.fname;\n        toBeUpdated.lname = formValues.lname || toBeUpdated.lname;\n        toBeUpdated.email = formValues.email || toBeUpdated.email;\n        toBeUpdated.department =\n          formValues.department || toBeUpdated.department;\n        toBeUpdated.termsConditions = formValues.termsConditions;\n        const filteredFriends = friends.filter((f) => f.id !== toBeUpdated.id);\n\n        setFriends([...filteredFriends, toBeUpdated]);\n        // reset the formsValue state\n        setFormValues(initialFormValues);\n        setEditingId(null);\n        setIsEditMode(false);\n      }\n      return;\n    }\n\n    // const lastUsersId = friends[friends.length - 1].id;\n    const newHire = {\n      // needs identical structure to the other friends\n      id: uuidv4(),\n      fname: formValues.fname,\n      lname: formValues.lname,\n      email: formValues.email,\n      department: formValues.department,\n      termsConditions: formValues.termsConditions,\n    };\n\n    // use your setFriends helper function\n    // setFriends(friends.concat(newFriend));\n    postnewHire(newHire);\n    // reset the formsValue state\n    setFormValues(initialFormValues);\n  };\n\n  // New Orientation Date Feature\n  const newDate = new Date();\n  const date = newDate.getDate();\n  const month = newDate.getMonth() + 1;\n  const year = newDate.getFullYear();\n\n  return (\n    <div className=\"container\">\n      <h2 style={{ color: \"white\", marginTop: \"2rem\" }}>\n        New Hire Orientation Signup\n      </h2>\n      <form onSubmit={submit} className=\"form\">\n        <label htmlFor=\"fnameInput\">First Name (required): </label>\n        <input\n          onChange={change}\n          value={formValues.fname}\n          maxLength=\"15\"\n          placeholder=\"First Name\"\n          id=\"fnameinput\"\n          name=\"fname\"\n          type=\"text\"\n          errors={errors}\n        />\n        <p>{errors[\"name\"]}</p>\n        <br />\n        <label htmlFor=\"lnameInput\">Last Name (required): </label>\n        <input\n          onChange={change}\n          value={formValues.lname}\n          maxLength=\"15\"\n          placeholder=\"Last Name\"\n          id=\"lnameinput\"\n          name=\"lname\"\n          type=\"text\"\n          errors={errors}\n        />\n        <br />\n        <div\n          className=\"d-flex justify-content-center align-content-center\"\n          style={{\n            marginTop: \"2rem\",\n            paddingTop: \"3em\",\n            paddingBottom: \"1rem\",\n          }}\n        >\n          <label htmlFor=\"emailInput\">Company Email Address: </label>\n          <input\n            onChange={change}\n            value={formValues.email}\n            maxLength=\"45\"\n            placeholder=\"email\"\n            id=\"emailinput\"\n            name=\"email\"\n            type=\"text\"\n          />\n        </div>\n        <br />\n\n        <label htmlFor=\"departmentSelect\">Home Department (required): </label>\n        <select\n          id=\"departmentSelect\"\n          name=\"department\"\n          value={formValues.department}\n          style={{ margin: \"2rem\" }}\n          onChange={change}\n          errors={errors}\n        >\n          <option value=\"\">--Choose One --</option>\n          <option value=\"\">--</option>\n          <option value=\"Technology/ IT\">Technology/ IT</option>\n          <option value=\"Frontend Development\">Frontend Development</option>\n          <option value=\"Backend Development\">Backend Development</option>\n          <option value=\"Beta Testing/ Troubleshooting\">\n            Beta Testing/ Troubleshooting\n          </option>\n          <option value=\"UI/ UX Team\">UI/ UX Team</option>\n          <option value=\"Management\">Management</option>\n          <option value=\"Accounting and Executive\">\n            Accounting and Executive\n          </option>\n        </select>\n        <br />\n        <label htmlFor=\"termsInput\">\n          Click if new hire materials collected{\" \"}\n          <a href=\"https://assets.adm.com/Our-Company/Code-of-Conduct/CodeOfConduct_en-US.pdf\">\n            (new hire materials)\n          </a>{\" \"}\n        </label>\n        <input\n          type=\"checkbox\"\n          id=\"termsInput\"\n          name=\"termsConditions\"\n          checked={formValues.termsConditions}\n          onChange={handleCheckboxChange}\n          errors={errors}\n        />\n        <br />\n        \n\n        <button type=\"submit\" disabled={disabled} id=\"btn-id\">\n          {isEditMode ? \"Update\" : \"Submit New Employee\"}\n        </button>\n        <div>\n          <em>{initialFormErrors.fname}</em>\n        </div>\n        <div>\n          <em>{initialFormErrors.lname}</em>\n        </div>\n        <div>\n          <em>{initialFormErrors.department}</em>\n        </div>\n        <div>\n          <em>{initialFormErrors.termsConditions}</em>\n        </div>\n      </form>\n\n      <div style={{ marginTop: \"3rem\", marginBottom: \"2rem\" }}>\n        <h3 style={{ color: \"white\" }}>\n          New team members to attend orientation on next scheduled date{\" \"}\n          {month + 1}/{date + 3}/{year}\n        </h3>\n      </div>\n      {friends.map((friend, idx) => (\n        <div className=\"player-trans\" key={idx} style={{ border: \"2px\" }}>\n          <h3 style={{ marginBottom: \"3rem\", marginTop: \"2rem\" }}>\n            {friend.fname} {friend.lname}\n          </h3>\n          <p>\n            <em>Assigned Email: </em>\n            {friend.email}\n          </p>\n          <p>\n            <em>Home Department: </em>\n            {friend.department}\n          </p>\n          <p>\n            <em>Terms and Conditions Agreed To: </em>\n            {friend.termsConditions ? \"Yes\" : \"No\"}\n          </p>\n          <br />\n          <br />\n          <button id=\"edit-btn\" onClick={() => handleUpdate(friend.id)}>\n            Edit Employee\n          </button>\n          <button id={idx} onClick={() => deleteQuote(friend.id)}>Delete Employee</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/SONVR.083ad49c.svg\";","import React from \"react\";\nimport Form from \"./Form.js\";\nimport Logo from \"./SONVR.svg\"\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\n\n\nexport default function App() {\n\n\n\n\n\n\n  return (\n    <div className=\"App d-flex justify-content-center\" >\n      <div className=\"form-card d-flex justify-content-center container\">\n        <div className=\"player-trans container\">\n          <img src={Logo} alt=\"sonar logo\" style={{width: \"40%\"}}></img>\n          <h3>Welcome to the new hire onboarding portal.</h3>\n          <p>\n          To begin the new hire onboarding process please fill in the *required information below. \n          </p>\n        </div>\n        <Form />\n      </div>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}